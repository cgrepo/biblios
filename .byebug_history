continue
params[:borrow][:account]
params[:borrow]
continue
params[:borrow]
params
continue
params[:borrow][:account]
params[:borrow]
params
params[:borrow]
con
co
c
cc
c
oooooooc
ssssssssssssssssssssssssssssssssss
aasprapaspramspaarrms
aarmrams
arams[:borrow][:accoaams[:bor
aams[prams[:borrow][:accountarams[:borrow][:accprams[:borrow][:accoun
continue
next
confirm
pass
continue
next
connext
continue
confirm
pass
continue
self.password_confirmation
self.auth
self.password
self.passwordconfirm
continue
self.password
self.auth
self.passwordconfirm
continue
self.password
self.password_confirmation
password_confirmation
params
continue
self.password_confirmation
self.password
continue
next
continue
next
continue
next
continue
next
continue
next
user_params
params
continue
next
user_params
continue
pry
continue
exit
show-source
exit
User.methods.grep /valid/
User.methods.grep /valir/
u.methods.grep /valid/
u
cd ..
cd u
pwd
u.methods
ls valid_password
ls v*
ls created_at
ls
cd u
u = User.new
ls
cd User
exit
ls
cd ..
ls
cat -l
cat
next
list
show-source Borrowed.new
show-source Borrowed
show-source
ls
cd new
ls
cd Borrowed
quit
exit
ls profi
ls profile
ls profile*
ls profile
ls profie
profile
ls
cd ..
new
profile
ls
methods
cd profile
ls profile
ls pro
ls pro*
cd b
b = Book.new
cd ..
profile
dir
pwd
ls
cd instance_methods
cd profile=
cd profiles
cd profile
ls methods
ls method
ls pro
cd Book
exit
profile
ls pro
ls | grep pro
ls | pro
cd Book
exit
Book.profile
Book.connection
exit
ls pro
cd Book
cd book
l.class
l = Library.find_by number:4072
l = Library.find_by number:5072
l.class
l  =Library.where(number:4072)
Library.where(number:4072)
Library.where(number:4079)
Libraty.where(number:4079)
L = Library.find_by number:4072
s.library=L
L.class?
L.class
s.library=L
L
s.library = L
L
s
Ã‘
s
L=Library.where(number:4072)
s
L
s
pwd
cd ..
pwd
stack
s
s.library = L
L = Library.where(number:4072)
ls library_id=
ls library_id
ls librayr_id
ls librayr
ls
cd s
s = School.last
s
ls
ls instance_methods
ls
cd School
cd Schppl
pry 
show-source
continue
params
continue
@user
params
continue
next
continue
next
User.errors
usr.errors
continue
next
usr.authenticate(pretended)
continue
user.authenticate(pretended)
continue
pretended
next
continue
continui
pretended
usr
next
@user
params[:user][:authme]
params
params[:authme]
params[_authme]
@user
continue
next
pretended
pretend
next
continue
params[:authme]
params
params[:auth]
continue
@user.errors.full_messages.count
@user.errors.full_messages.push 'Error encontrado revise que tenga los datos correctos!'
@user.errors.full_messages
@user.errors.full_messages.count
@user.errors.full_messages << 'Error encontrado revise que tenga los datos correctos!'
@user.errors.full_messages.count
@user.errors.full_messages
continue
@user.errors.full_messages.methods.each { |m| puts m }
@user.errors.full_messages.methods
continue
@user.errors.count
@user.errors
continue
@user.errors.full_messages
@user.errors.full_messages.any?
continue
@user.errors.any?
@user.errors
continue
next
continue
next
@user
