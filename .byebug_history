continue
Borrowed.where(returned:false).where(subscriptor_id:subscriptors).count
Borrowed.where(returned:false).where(subscriptor_id:subscriptors)
Borrowed.where(returned:false).where(subscriptors)
continue
subscriptors
continue
@borrows
continue
@borrows
next
@borrows
next
@borrows
next
@borrows
continue
@subscriptors.pluck :fullname
@subscriptors.count
continue
next
continue
next
Borrowed.where(returned:false).where(:subscriptor_id => subscriptor).count
Borrowed.where(returned:false).where(:subscriptor_id => subscriptor)
continue
@subscriptors.each { |s| puts s}
next
continue
subscriptor
@borrows
next
@subscriptors
next
continue
coninue
params[:order][:index]
params[:order]
params[order]
params
continue
params
continue
params
continue
@borrows
continue
@borrows
next
continue
continmue
@borrows
next
continue
@borrow
@borrows
next
continue
cancel
step
borrow
next
continue
next
@borrows
continue
next
@borrows
continue
contineui
continue
next
continue
contine
@borrow
continue
next
params[:borrow]
params
paras
continue
params
continue
params
continue
params
continue
params
continue
params
continue
@rents
next
@rents
list
Borrowed.all.where(subscriptor:subscriptor).count
 subscriptor
continue
step
continue
@rents
next
continue
@subscriptors.each do |subscriptor|
@subscriptors
next
step
continue
next
list
@subscriptors.count
@subscriptors
next
step
@rents
step
stop
continue
@rents
next
continue
conttinue
continue
next
@subscriptors.all.count
@subscriptors.all
@subscriptors.count
@subscriptors
continue
Borrowed.all.where(subscriptor:@subscriptors).count
Borrowed.all.where(subscriptor:@subscriptor).count
@subscriptors.count
@subscriptors
continue
next
@subscriptors.pluck :account
@subscriptors.pluck account
@subscriptors
next
continue
next
@books[index-1].id
@books[index-1]
@books[index]
next
index
continue
index
continue
@books[index]
index
next
continue
index
continue
break
breakl
book.methods.grep /cur/
book.methods.grep /inde/
book.methods
book.id
@books.methods.grep /find/
@books.methods.grep /current/
@books.methods.grep /with/
@books.methods.grep /index/
continue
@books.number
@books.index
@books.count
@books.methods.grep /count/
@books.methods.grep /first/
@books.methods.grep /after/
@books.methods.grep /befo/
@books.methods.grep /index/
@books.methods.grep /index
@books.methods
book
next
book
next
list 10-20
list
bookx
continue
next
continue
next
continue
next
continue
step
Borrowed.all.where('subscriptor_id = ?',subscriptor).count
step
continue
subscriptor
step
Borrowed.subscriptor_limit_reached?(@subscriptor)
next
Borrowed.subscriptor_limit_reached?(@subscriptor)
continue
next
default_render unless performed?
next
continue
next
continue
 continue
continue
Borrowed.subscriptor_limit_reached?(@subscriptor)
next
continue
next
Borrowed.subscriptor_limit_reached?(@subscriptor)
Borrowed.methods.grep /reach/
@subscriptor
next
continue
Borrowed.where('subscriptor_id = ?',params[:account]).count
continue
Borrowed.where(subscriptor_id:params[:account]).count
next
continue
next
continue
next
continue
next
:index
next
continue
next
continue
next
continue
next
@failFlag
next
continue
params
continue
params
continue
contimune
break
continue
params
continue
next
continue
next
b = Borrowed.new(1,1,'12/12/12/','12/11/12')
list 10
exit
ls
cd ..
ls
